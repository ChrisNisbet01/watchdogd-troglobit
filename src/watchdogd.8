.\"
.\" Copyright (c) 2016  Joachim Nilsson <troglobit@gmail.com>
.\"
.\" Permission to use, copy, modify, and/or distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd June 12, 2016
.Dt WATCHDOGD 8
.Os "watchdogd (3.0)"
.Sh NAME
.Nm watchdogd
.Nd
Advanced system & process monitor daemon
.Sh SYNOPSIS
.Nm
.Op Fl hnsvx
.Op Fl l Ar LVL
.Op Fl T Ar SEC
.Op Fl t Ar SEC
.Op Fl a Ar WARN,REBOOT
.Op Fl f Ar WARN,REBOOT
.Op Fl m Ar WARN,REBOOT
.Op Fl p Op RTPRIO
.Op Ar /dev/watchdogN
.Sh DESCRIPTION
.Nm
watchdogd is an advanced system and process supervisor daemon.  It can
monitor critical system resources, supervise the heartbeat of processes
and record deadline transgressions before safely rebooting your system.
.Pp
When the system boots back up watchdogd queries the system to determine
the cause of the (re)boot and records it in a logfile for later analysis
by an operator or network management system (NMS).
.Sh WATCHDOG
A watchdog timer (WDT) is something most motherboards of laptops and
servers today are equipped with.  It is basically a small timer that is
connected to the reset circuitry so that it can reset the board when the
timer expires.
.Pp
The Linux kernel provides a common userspace interface
.Pa /dev/watchdog ,
created automatically when the appropriate driver module is loaded.  If
your board does not have a WDT the kernel provides a "softdog" module
which could be good enough.
.Pp
The idea is to have a watchdog daemon in userspace that runs in the
background of your system.  When there is no more CPU time for the
watchdog daemon to run it will fail to "kick" the WDT.  This will in
turn cause the WDT to reboot the system.
.Sh OPTIONS
Earlier versions of
.Nm
supported more command line options, from v3.0
.Nm
has been greatly simplified.
.Bl -tag -width Ds
.It Fl n, -forground
Run in foreground, default is to daemonize and background.
.It Fl s, -syslog
Use
.Xr syslog 3
for log messages, warnings and error conditions.  This is the default
when running in the background.  When running in the foreground, see
.Fl n ,
log messages are printed to stdout.
.It Fl l, -loglevel Ar LEVEL
Set log level: none, err, info,
.Ar notice ,
debug.
.It Fl T, -timeout Ar SEC
HW watchdog timer (WDT) timeout, in SEC seconds.
.It Fl t, -interval Ar SEC
WDT kick interval, in SEC seconds, default: 10
.It Fl x, -safe-exit
Disable watchdog HW on ordered exit from
.Nm .
However, the "magic" exit may not be supported by the HW WDT or the
driver.  Make sure to try it first, or check the driver source code.
.It Fl a, -load-average Ar WARN,REBOOT
Enable load average check, WARN,REBOOT.
.Nm
actually takes the number of CPU cores into account, so the argument to
this option only needs to be 0-1, regardless of the CPU/arch.
.It Fl m, -meminfo Ar WARN,REBOOT
Enable memory leak check, WARN,REBOOT.
.It Fl f, -filnr Ar WARN,REBOOT
Enable file descriptor leak check, WARN,REBOOT.
.It Fl p, -supervisor Op RTPRIO
Enable process monitor, run at elevated RT prio.  Default RT prio when
active: SCHED_RR @98.
.It Fl h, -help
Show summary of command line options and exit.
.It Fl v, -version
Show program version and exit.
.El
.Sh SIGNALS
.Nm
responds to the following signals:
.Pp
.Bl -tag -width TERM -compact
.It TERM
Safe exit if started with the
.Fl x
flag, otherwise same as PWR.
.It INT
Same as TERM
.It PWR
Force a system reboot.  Systems with Finit use this to reboot.
.It QUIT
Same as TERM
.It USR1
Ignored, was used in an earlier version.
.It USR2
Same as USR1
.El
.Sh FILES
.Bl -tag -width /var/lib/watchdogd.state -compact
.It Pa /var/lib/watchdogd.state
State post boot, lists (re)boot reason
.It Pa /run/watchdogd.pid
For convenience to other processes when sending signals.  Also a useful
synchronization point, because the PID file is only created when
.Nm
is ready to receive signals and register processes with the process supervisor API
.It Pa /run/watchdogd.sock
UNIX domain socket used by libwdog to connect daemon
.El
.Sh AUTHORS
.Nm
was originally written by Michele d'Amico, adapted to uClinux-dist by
Mike Frysinger.  This version is maintained by Joachim Nilsson
.Aq mailto:troglobit@gmail.com
at
.Aq https://github.com/troglobit/watchdogd
.Sh BUGS
Here be dragons.
